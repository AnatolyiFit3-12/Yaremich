import np as np

a = np.matrix('7 3 -6; 7 9 -9; 2 4 9')
print('A=',a)
b = np.matrix('-1; 5; 28')
print('B=',b)

def kramer (a, b):
    a_det = np.linalg.det("A")
    print('Детермінант матриці = ', a_det)

#Зробити реревірку,що детермінант не дорівнює нулю
if ( a_det != 0):
    print('Розв*язуємо систему')
    x_m = np.matrix(a)

    x_m[:, 0] = b  # формування допоміжної матриці (1 ст. замінюємо на ст. b)

    print('x_m=', x_m)

    y_m = np.matrix(a)  # 2 ст. замінюємо на ст. b

    y_m[:, 1] = b  # 2 c

    print('y_m=', y_m)


z_m = np.matrix(a) #3 ст. замінюємо на ст. b

z_m[:, 2] = b

print('z_m=',z_m)

x = np.linalg.det(x_m) / a_det

y = np.linalg.det(y_m) / a_det

z = np.linalg.det(z_m) / a_det

print('X = ', round(x,5))

print('Y=', round(y,5))

print('Z=', round(z,5))

else:
print('Розв*язків немає')
kramer(a,b)
